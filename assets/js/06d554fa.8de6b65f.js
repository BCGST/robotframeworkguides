"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[513],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(a),b=i,u=m["".concat(o,".").concat(b)]||m[b]||d[b]||r;return a?n.createElement(u,l(l({ref:t},c),{},{components:a})):n.createElement(u,l({ref:t},c))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=b;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[m]="string"==typeof e?e:i,l[1]=s;for(var p=2;p<r;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},7407:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const r={sidebar_label:"Variables",title:"Variables"},l=void 0,s={unversionedId:"variables",id:"variables",title:"Variables",description:"\\\\\\ Variables \\\\\\ Section",source:"@site/docs/variables.mdx",sourceDirName:".",slug:"/variables",permalink:"/docs/variables",draft:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/docs/variables.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Variables",title:"Variables"},sidebar:"tutorialSidebar",previous:{title:"Reporting Test Results",permalink:"/docs/reporting_alternatives"}},o={},p=[{value:"*** Variables *** Section",id:"-variables--section",level:2},{value:"When to use $ and @ and &amp; and %?",id:"when-to-use--and--and--and-",level:2}],c={toc:p};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"-variables--section"},"*","*","*"," Variables ","*","*","*"," Section"),(0,i.kt)("p",null,"Variables which are defined in the ","*","*","*"," Variables ","*","*","*"," section are available in all test cases and keywords in the same file.",(0,i.kt)("br",{parentName:"p"}),"\n","Variables defined in the ","*","*","*"," Variables ","*","*","*"," section are ",(0,i.kt)("strong",{parentName:"p"},"global")," variables.",(0,i.kt)("br",{parentName:"p"}),"\n","If a ",(0,i.kt)("inlineCode",{parentName:"p"},".resource")," or a ",(0,i.kt)("inlineCode",{parentName:"p"},".robot")," file with a ","*","*","*"," Variables ","*","*","*"," section is imported, the variables are also available globally."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("iframe",{src:"https://robotframework.org/embed/?code-gh-url=https://github.com/MarketSquare/robotframeworkguides/tree/main/code-examples/standard_library/variables_section",width:"100%",height:"600"}),(0,i.kt)("h2",{id:"when-to-use--and--and--and-"},"When to use $ and @ and & and %?"),(0,i.kt)("p",null,"Variable Names consist of "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a variable type identifier (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"$"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"@"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"&"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"%"),")"),(0,i.kt)("li",{parentName:"ul"},"curly braces ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},"a variable name (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"my_var"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"my_list"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"my_dict"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"my_var2"),")")),(0,i.kt)("p",null,"The variable type identifier is used to define the type of the variable."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$")," is used for scalar variables."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@")," is used for list variables."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"&")," is used for dictionary variables."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"%")," is used for environment variables.")),(0,i.kt)("p",null,"What is the difference between a scalar variable, a list variable and a dictionary?",(0,i.kt)("br",{parentName:"p"}),"\n","A scalar variable can only contain ",(0,i.kt)("strong",{parentName:"p"},"one value"),".",(0,i.kt)("br",{parentName:"p"}),"\n","A list variable can contain ",(0,i.kt)("strong",{parentName:"p"},"multiple values"),".",(0,i.kt)("br",{parentName:"p"}),"\n","A dictionary variable can contain ",(0,i.kt)("strong",{parentName:"p"},"multiple key-value pairs"),"."),(0,i.kt)("p",null,"But why can we access a list variable ",(0,i.kt)("inlineCode",{parentName:"p"},"my_list")," with the syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"${my_list}")," and also with the syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"@{my_list}"),"?"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"${my_list}")," accesses the whole list object ",(0,i.kt)("inlineCode",{parentName:"p"},"my_list"),". It is a container and holds all the items of the list.\nYou can use it to access the whole list variable ",(0,i.kt)("inlineCode",{parentName:"p"},"my_list")," or to access a specific item of the list with the syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"${my_list}[index]"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@{my_list}")," accesses the items of the list variable ",(0,i.kt)("inlineCode",{parentName:"p"},"my_list"),". It is like the list variable ",(0,i.kt)("inlineCode",{parentName:"p"},"my_list")," is unpacked and all the items are available as individual variables."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Variables ***\n@{my_list}    Apple    Banana    Orange\n\n*** Test Cases ***\nTest Case 1\n    Log    ${my_list}   # Pass: Logs the whole list object\n    Log Many    @{my_list}   # Pass: Logs the items of the list object\n    Log Many    ${my_list}   # Pass: Logs the whole list object\n    Log List    ${my_list}   # Pass: Logs the whole list object\n    Log    ${my_list}[0]    # Pass: Logs the first item of the list object\n    Log    @{my_list}[0]    # Fail: @{my_list} is not a list object and does not have an index\n    Log    @{my_list}       # Fail: The second argument of the Log keyword `level` only allows the values `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `NONE`.\n                            # The value `Banana` for the argument `level` is not allowed.\n    Log    ${my_list}[0]    ${my_list}[1]   ${my_list}[2]   # Fail: Same as above    \n    FOR    ${item}    IN    @{my_list}  # Pass: Iterates over the items of the list object\n        Log    ${item}                  # Pass: Logs the items of the list object   \n    END\n")),(0,i.kt)("p",null,"Whenever you want to access the container of a list variable, you have to use the syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"${my_list}"),".",(0,i.kt)("br",{parentName:"p"}),"\n","When you want to break down the list variable into its items, you have to use the syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"@{my_list}"),"."),(0,i.kt)("p",null,"It's like a beer crate with bottles inside.",(0,i.kt)("br",{parentName:"p"}),"\n","With the syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"${beer_crate}")," you can access the whole beer crate.",(0,i.kt)("br",{parentName:"p"}),"\n","With the syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"@{beer_crate}")," you get the bottles.",(0,i.kt)("br",{parentName:"p"}),"\n","With the syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"${beer_crate}[index]")," you get a specific bottle inside the crate."))}m.isMDXComponent=!0}}]);