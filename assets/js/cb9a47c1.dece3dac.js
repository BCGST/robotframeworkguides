"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8153],{2282:(e,t,i)=>{i.d(t,{_:()=>o,w:()=>l});var s=i(7294),a=i(7376),n=i(9960),r=i(6010);function o(e){let{id:t,title:i,children:n,description:o,className:l,hasSubSections:p=!1,HeadingTag:c="h3"}=e;return s.createElement("div",{className:(0,r.Z)("homepage-section",p&&"has-sub-sections",l)},i&&s.createElement(c,{id:t??(0,a.o)(i)},i),o&&s.createElement("p",{className:"section-description"},o),s.createElement("div",{className:"section-content"},n))}function l(e){let{id:t,icon:i,title:r,description:o,to:l}=e;return s.createElement(n.Z,{to:l,className:"homepage-card"},i&&s.createElement("div",{className:"icon"},i),s.createElement("div",{className:"card-content"},s.createElement("div",{className:"title",id:t&&(0,a.o)(r)},r),s.createElement("div",{className:"description"},o)))}},2475:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=i(7462),a=(i(7294),i(3905)),n=i(2282);const r={sidebar_position:2,sidebar_label:"CI Systems",title:"CI Systems"},o=void 0,l={unversionedId:"using_rf_in_ci_systems/ci",id:"using_rf_in_ci_systems/ci",title:"CI Systems",description:"<Card",source:"@site/docs/using_rf_in_ci_systems/ci.mdx",sourceDirName:"using_rf_in_ci_systems",slug:"/using_rf_in_ci_systems/ci",permalink:"/docs/using_rf_in_ci_systems/ci",draft:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/docs/using_rf_in_ci_systems/ci.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"CI Systems",title:"CI Systems"},sidebar:"tutorialSidebar",previous:{title:"Docker Images",permalink:"/docs/using_rf_in_ci_systems/docker"},next:{title:"Python Libraries",permalink:"/docs/extending_robot_framework/python_library"}},p={},c=[{value:"GitLab",id:"gitlab",level:2},{value:"Stages",id:"stages",level:3},{value:"Jobs",id:"jobs",level:3},{value:"Image",id:"image",level:3},{value:"Scripts",id:"scripts",level:3},{value:"Artifacts",id:"artifacts",level:3},{value:"Jenkins",id:"jenkins",level:2},{value:"GitHub Actions",id:"github-actions",level:2},{value:"TeamCity",id:"teamcity",level:2},{value:"Azure DevOps",id:"azure-devops",level:2}],m={toc:c};function d(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,s.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(n._,{title:"CI Systems",mdxType:"Section"},(0,a.kt)(n.w,{title:"GitLab",description:"The One DevOps Platform",to:"/docs/using_rf_in_ci_systems/ci#gitlab",mdxType:"Card"}),(0,a.kt)(n.w,{title:"Jenkins",description:"An open source automation server which enables developers around the world to reliably build, test, and deploy their software",to:"/docs/using_rf_in_ci_systems/ci#jenkins",mdxType:"Card"}),(0,a.kt)(n.w,{title:"GitHub Actions",description:"Automate, customize, and execute your software development workflows right in your repository with GitHub Actions.",to:"/docs/using_rf_in_ci_systems/ci#github-actions",mdxType:"Card"}),(0,a.kt)(n.w,{title:"Azure DevOps",description:"Plan smarter, collaborate better, and ship faster with a set of modern dev services",to:"/docs/using_rf_in_ci_systems/ci#azure-devops",mdxType:"Card"}),(0,a.kt)(n.w,{title:"TeamCity",description:"TeamCity is a continuous integration server that integrates with all major IDEs, version control and issue tracking systems",to:"/docs/using_rf_in_ci_systems/ci#teamcity",mdxType:"Card"})),(0,a.kt)("h2",{id:"gitlab"},"GitLab"),(0,a.kt)("p",null,"GitLab is a development platform that provides a Git repository manager providing wiki, issue-tracking and continuous integration and deployment pipeline features, using an open-source license, developed by GitLab Inc."),(0,a.kt)("p",null,"To set up a CI Pipeline which will run your (test) jobs on a GitLab Runner, you need to create a ",(0,a.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," file in the root of your repository. This file contains the configuration of your CI Pipeline."),(0,a.kt)("p",null,"A CI Pipeline is a set of ",(0,a.kt)("inlineCode",{parentName:"p"},"jobs")," that are executed in a specific order.",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"Stages")," are used to group ",(0,a.kt)("inlineCode",{parentName:"p"},"jobs")," together and to define the order in which they are executed."),(0,a.kt)("p",null,"An example for a CI Pipeline using a Dockerimage which runs Robot Framework jobs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"stages:\n  - smoke\n  - regression\n\nimage: ppodgorsek/robot-framework:latest\n\nrun-smoke-tests:\n  stage: smoke\n  script:\n    - robot --outputdir reports tests/smoke\n  artifacts:\n    paths:\n      - reports\n\nrun-regression-tests:\n    stage: regression\n    script:\n        - robot --outputdir reports tests/regression\n    artifacts:\n        paths:\n            - reports\n")),(0,a.kt)("h3",{id:"stages"},"Stages"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"stages:\n  - smoke\n  - regression\n")),(0,a.kt)("p",null,"The Pipeline has two stages: ",(0,a.kt)("inlineCode",{parentName:"p"},"smoke")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"regression"),".",(0,a.kt)("br",{parentName:"p"}),"\n","The ",(0,a.kt)("inlineCode",{parentName:"p"},"smoke")," stage will be executed first, followed by the ",(0,a.kt)("inlineCode",{parentName:"p"},"regression")," stage.",(0,a.kt)("br",{parentName:"p"}),"\n","Each stage can contain multiple jobs which will be executed in parallel (within the same stage)."),(0,a.kt)("h3",{id:"jobs"},"Jobs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"run-smoke-tests:\n  stage: smoke\n  ...\n\nrun-regression-tests:\n  stage: regression\n  ...\n")),(0,a.kt)("p",null,"The job ",(0,a.kt)("inlineCode",{parentName:"p"},"run-smoke-tests")," is part of the ",(0,a.kt)("inlineCode",{parentName:"p"},"smoke")," stage.",(0,a.kt)("br",{parentName:"p"}),"\n","The job ",(0,a.kt)("inlineCode",{parentName:"p"},"run-regression-tests")," is part of the ",(0,a.kt)("inlineCode",{parentName:"p"},"regression")," stage.  "),(0,a.kt)("p",null,"Each job can contain multiple ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts")," which will be executed in sequence.",(0,a.kt)("br",{parentName:"p"}),"\n","The scripts are executed in the (Docker)",(0,a.kt)("inlineCode",{parentName:"p"},"image")," specified in the configuration."),(0,a.kt)("h3",{id:"image"},"Image"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"image: ppodgorsek/robot-framework:latest\n")),(0,a.kt)("p",null,"The image is used to run the jobs in the CI Pipeline. It is possible to use a different image for each job. The ",(0,a.kt)("inlineCode",{parentName:"p"},"image")," specified at the top of the configuration is used as the default image for all jobs (unless a job-specific image is specified).",(0,a.kt)("br",{parentName:"p"}),"\n","The default image used here is ",(0,a.kt)("inlineCode",{parentName:"p"},"ppodgorsek/robot-framework:latest"),"."),(0,a.kt)("h3",{id:"scripts"},"Scripts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"script:\n  - robot --outputdir reports tests/smoke\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"script")," is a list of commands that will be executed in sequence for the job.",(0,a.kt)("br",{parentName:"p"}),"\n","The ",(0,a.kt)("inlineCode",{parentName:"p"},"script")," specified here will run the Robot Framework tests in the ",(0,a.kt)("inlineCode",{parentName:"p"},"tests/smoke")," folder and will output the results in the ",(0,a.kt)("inlineCode",{parentName:"p"},"reports")," folder.",(0,a.kt)("br",{parentName:"p"}),"\n","It is possible to use multiple ",(0,a.kt)("inlineCode",{parentName:"p"},"script")," commands in a job."),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"script:\n  - pip install -r requirements.txt\n  - mkdir reports\n  - robot --outputdir reports tests/smoke\n")),(0,a.kt)("h3",{id:"artifacts"},"Artifacts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"artifacts:\n  paths:\n    - reports\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"artifacts")," section is used to specify the files and folders that should be stored as artifacts after the job has finished.",(0,a.kt)("br",{parentName:"p"}),"\n","For example, you can store the test results (like the ",(0,a.kt)("inlineCode",{parentName:"p"},"log.html")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"report.html")," files) as artifacts.",(0,a.kt)("br",{parentName:"p"}),"\n","Here, the ",(0,a.kt)("inlineCode",{parentName:"p"},"reports")," folder is stored as an artifact. It contains all the test results and screenshots.",(0,a.kt)("br",{parentName:"p"}),"\n","That's possible, because the ",(0,a.kt)("inlineCode",{parentName:"p"},"--outputdir")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"robot")," command was set to ",(0,a.kt)("inlineCode",{parentName:"p"},"reports"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"robot --outputdir reports tests/smoke\n")),(0,a.kt)("h2",{id:"jenkins"},"Jenkins"),(0,a.kt)("h2",{id:"github-actions"},"GitHub Actions"),(0,a.kt)("h2",{id:"teamcity"},"TeamCity"),(0,a.kt)("h2",{id:"azure-devops"},"Azure DevOps"))}d.isMDXComponent=!0}}]);