"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[735],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,b=m["".concat(u,".").concat(d)]||m[d]||p[d]||i;return n?r.createElement(b,a(a({ref:t},s),{},{components:n})):r.createElement(b,a({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5380:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={sidebar_position:99,sidebar_label:"How to contribute",title:"How to contribute"},u=void 0,c={unversionedId:"contribute",id:"contribute",title:"How to contribute",description:"This documentation project is powered by Docusaurus and maintained on GitHub",source:"@site/docs/contribute.md",sourceDirName:".",slug:"/contribute",permalink:"/robotframeworkguides/contribute",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/contribute.md",tags:[],version:"current",sidebarPosition:99,frontMatter:{sidebar_position:99,sidebar_label:"How to contribute",title:"How to contribute"},sidebar:"tutorialSidebar",previous:{title:"Teamcity",permalink:"/robotframeworkguides/using_rf_in_ci_systems/teamcity"},next:{title:"Robot Framework Libraries",permalink:"/robotframeworkguides/different_libraries"}},s={},p=[{value:"Branches",id:"branches",level:2}],m={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This documentation project is powered by ",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/"},"Docusaurus")," and maintained on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MarketSquare/robotframeworkguides"},"GitHub")),(0,i.kt)("p",null,"The basic steps to contribute to the project are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fork the project on GitHub"),(0,i.kt)("li",{parentName:"ul"},"Clone the repository locally"),(0,i.kt)("li",{parentName:"ul"},"Install the project dependencies via ",(0,i.kt)("inlineCode",{parentName:"li"},"npm install")),(0,i.kt)("li",{parentName:"ul"},"Update existing documentation files with the new content or add new files"),(0,i.kt)("li",{parentName:"ul"},"Run ",(0,i.kt)("a",{parentName:"li",href:"https://docusaurus.io/docs/installation#running-the-development-server"},"Development Server")," to see changes in real time on ",(0,i.kt)("a",{parentName:"li",href:"http://localhost:3000"},"localhost")),(0,i.kt)("li",{parentName:"ul"},"Build static html files with ",(0,i.kt)("inlineCode",{parentName:"li"},"npm run build")),(0,i.kt)("li",{parentName:"ul"},"Test the build locally with ",(0,i.kt)("inlineCode",{parentName:"li"},"npm run serve")),(0,i.kt)("li",{parentName:"ul"},"Commit the changes to the repository"),(0,i.kt)("li",{parentName:"ul"},"Push the changes to GitHub"),(0,i.kt)("li",{parentName:"ul"},"Deploy to GitHub Pages with ",(0,i.kt)("inlineCode",{parentName:"li"},"GIT_USER=<GITHUB_USERNAME> yarn deploy"))),(0,i.kt)("h1",{id:"github-repository"},"GitHub Repository"),(0,i.kt)("h2",{id:"branches"},"Branches"),(0,i.kt)("p",null,"There are two branches in the project:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"main")," is the default branch and is used to maintain the documentation"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gh-pages")," is only used for the deployment of the ",(0,i.kt)("inlineCode",{parentName:"li"},".html")," documentation to GitHub Pages")),(0,i.kt)("h2",{id:""}))}d.isMDXComponent=!0}}]);